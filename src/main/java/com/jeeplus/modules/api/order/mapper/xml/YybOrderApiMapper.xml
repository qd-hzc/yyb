<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.api.order.mapper.YybOrderApiMapper">


	<resultMap id="OrderAndDetailResultMap" type="com.jeeplus.modules.api.order.entity.OrderApi">
		<collection property="detailList" javaType="java.util.List" column="id"
					ofType="com.jeeplus.modules.api.order.entity.OrderDeatilApi"
					select="com.jeeplus.modules.api.order.mapper.YybOrderDeatilApiMapper.listByOrderId">
		</collection>
	</resultMap>

	<sql id="yybOrderColumns">
		a.id AS "id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.order_no AS "orderNo",
		a.trade_no AS "tradeNo",
		a.status AS "status",
		a.order_time AS "orderTime",
		a.pay_time AS "payTime",
		a.pay_type AS "payType",
		a.order_amount AS "orderAmount",
		a.pay_amount AS "payAmount",
		a.member_id AS "memberId",
		a.member_name AS "memberName",
		a.member_address AS "memberAddress",
		a.id_card AS "idCard",
		a.id_card_attach AS "idCardAttach",
		a.org_code AS "orgCode",
		a.org_code_attach AS "orgCodeAttach",
		a.member_type AS "memberType",
		a.phone AS "phone",
		a.remarks AS "remarks",
		a.company_id AS "companyId",
		a.member_sex As "memberSex"
	</sql>
	
	<sql id="yybOrderJoins">
		
	</sql>
	
    
	<select id="get" resultType="OrderApi" >
		SELECT 
			<include refid="yybOrderColumns"/>
		FROM yyb_order a
		<include refid="yybOrderJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="OrderApi" >
		SELECT 
			<include refid="yybOrderColumns"/>
		FROM yyb_order a

		<include refid="yybOrderJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="companyId != null and companyId != ''">
				AND a.company_id = #{companyId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="OrderApi" >
		SELECT 
			<include refid="yybOrderColumns"/>
		FROM yyb_order a

		<include refid="yybOrderJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="companyId != null and companyId != ''">
				AND a.company_id = #{companyId}
			</if>
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO yyb_order(
			id,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			order_no,
			trade_no,
			status,
			order_time,
			pay_time,
			pay_type,
			order_amount,
			pay_amount,
			member_id,
			member_name,
			member_address,
			id_card,
			id_card_attach,
			org_code,
			org_code_attach,
			member_type,
			phone,
			remarks,
			member_sex
		) VALUES (
			#{id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{orderNo},
			#{tradeNo},
			#{status},
			#{orderTime},
			#{payTime},
			#{payType},
			#{orderAmount},
			#{payAmount},
			#{memberId},
			#{memberName},
			#{memberAddress},
			#{idCard},
			#{idCardAttach},
			#{orgCode},
			#{orgCodeAttach},
			#{memberType},
			#{phone},
			#{remarks},
			#{memberSex}
		)
	</insert>
	
	<update id="update">
		UPDATE yyb_order SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			order_no = #{orderNo},
			trade_no = #{tradeNo},
			status = #{status},
			order_time = #{orderTime},
			pay_time = #{payTime},
			pay_type = #{payType},
			order_amount = #{orderAmount},
			pay_amount = #{payAmount},
			member_id = #{memberId},
			member_name = #{memberName},
			member_address = #{memberAddress},
			id_card = #{idCard},
			id_card_attach = #{idCardAttach},
			org_code = #{orgCode},
			org_code_attach = #{orgCodeAttach},
			member_type = #{memberType},
			phone = #{phone},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM yyb_order
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE yyb_order SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="OrderApi" statementType="STATEMENT">
		select * FROM yyb_order  where ${propertyName} = '${value}'
	</select>


	<select id="list" resultMap="OrderAndDetailResultMap">
		SELECT
		<include refid="yybOrderColumns"/>
		FROM yyb_order a

		where
		a.del_flag = 0 and a.member_id = #{memberId}
		<if test="status != null">
			and a.status = ${status}
		</if>
		ORDER BY a.create_date DESC
	</select>

	<update id="updateStatus">
		UPDATE yyb_order SET
			status = #{status}
		WHERE id = #{orderId}
	</update>


	<update id="cancelOvertimeOrder">
		UPDATE yyb_order SET
			status = 2
		WHERE status = 1 and DATEDIFF(now(), order_time)>=3
	</update>
	
</mapper>